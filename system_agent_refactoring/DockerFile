# Dockerfile per il microservizio di refactoring del codice

FROM openjdk:17-slim

RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    curl \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

ENV SONARQUBE_VERSION=9.5.0.56709
ENV SONARQUBE_HOME=/opt/sonarqube

RUN mkdir -p $SONARQUBE_HOME && \
    wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-${SONARQUBE_VERSION}.zip -O /tmp/sonarqube.zip && \
    unzip /tmp/sonarqube.zip -d /opt && \
    mv /opt/sonarqube-${SONARQUBE_VERSION}/* $SONARQUBE_HOME && \
    rm /tmp/sonarqube.zip

ENV SONAR_SCANNER_VERSION=4.6.2.2472
ENV SONAR_SCANNER_HOME=/opt/sonarscanner

RUN mkdir -p $SONAR_SCANNER_HOME && \
    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -O /tmp/sonarscanner.zip && \
    unzip /tmp/sonarscanner.zip -d /opt && \
    mv /opt/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/* $SONAR_SCANNER_HOME && \
    rm /tmp/sonarscanner.zip

WORKDIR /app
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

COPY . .

EXPOSE 8000

CMD ["/bin/bash", "-c", "$SONARQUBE_HOME/bin/linux-x86-64/sonar.sh start && uvicorn src.main:app --host 0.0.0.0 --port 8000"]
