# Dockerfile per il microservizio di analisi del codice

# Step 1: Usare un'immagine base Python con Java 17 e SonarQube
FROM openjdk:17-slim

# Step 2: Installare Python e altre dipendenze
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    curl \
    wget \
    unzip \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Step 3: Installare SonarQube
ENV SONARQUBE_VERSION=9.5.0.56709
ENV SONARQUBE_HOME=/opt/sonarqube

RUN mkdir -p $SONARQUBE_HOME && \
    wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-${SONARQUBE_VERSION}.zip -O /tmp/sonarqube.zip && \
    unzip /tmp/sonarqube.zip -d /opt && \
    mv /opt/sonarqube-${SONARQUBE_VERSION}/* $SONARQUBE_HOME && \
    rm /tmp/sonarqube.zip

# Step 4: Installare SonarScanner
ENV SONAR_SCANNER_VERSION=4.6.2.2472
ENV SONAR_SCANNER_HOME=/opt/sonarscanner

RUN mkdir -p $SONAR_SCANNER_HOME && \
    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip -O /tmp/sonarscanner.zip && \
    unzip /tmp/sonarscanner.zip -d /opt && \
    mv /opt/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/* $SONAR_SCANNER_HOME && \
    rm /tmp/sonarscanner.zip

# Step 5: Installare le dipendenze Python
WORKDIR /app

# Step 6: Copy the requirements file and install dependencies
COPY src/requirements.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt
# Step 6: Copy all source code to the working directory
COPY . .

# Step 7: Start SonarQube and your Python app using a script
COPY start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

# Correct CMD syntax
CMD ["/usr/local/bin/start.sh"]
